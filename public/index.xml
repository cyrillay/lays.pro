<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cyril Lay</title>
    <link>http://www.lays.pro/</link>
    <description>Recent content on Cyril Lay</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Apr 2020 03:08:59 +0200</lastBuildDate>
    
	<atom:link href="http://www.lays.pro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deep Fake Detection Challenge (DFDC) on Kaggle</title>
      <link>http://www.lays.pro/post/dfdc-challenge-kaggle/</link>
      <pubDate>Wed, 15 Apr 2020 03:08:59 +0200</pubDate>
      
      <guid>http://www.lays.pro/post/dfdc-challenge-kaggle/</guid>
      <description>[DRAFT - WORK IN PROGRESS]  Deep fake context, GAN, dataset size challenge etc processing the videos Frame extraction Face recognition ResNext50 training Inference pipeline : video -&amp;gt; frames -&amp;gt; faces -&amp;gt; prediction over each face/frame -&amp;gt; average -&amp;gt; output  </description>
    </item>
    
    <item>
      <title>Plant Pathology Challenge Kaggle</title>
      <link>http://www.lays.pro/post/plant-pathology-challenge-kaggle/</link>
      <pubDate>Wed, 15 Apr 2020 02:27:15 +0200</pubDate>
      
      <guid>http://www.lays.pro/post/plant-pathology-challenge-kaggle/</guid>
      <description>[DRAFT - WORK IN PROGRESS] In this kaggle competition, we will learn how to train a convolutional neural network (CNN) for multi label classification.
Problem statement Misdiagnosis of the many diseases impacting agricultural crops can lead to misuse of chemicals leading to the emergence of resistant pathogen strains, increased input costs, and more outbreaks with significant economic loss and environmental impacts. Current disease diagnosis based on human scouting is time-consuming and expensive, and although computer-vision based models have the promise to increase efficiency, the great variance in symptoms due to age of infected tissues, genetic variations, and light conditions within trees decreases the accuracy of detection.</description>
    </item>
    
    <item>
      <title>Bot detection POC</title>
      <link>http://www.lays.pro/post/bot-detection/</link>
      <pubDate>Wed, 15 Apr 2020 00:30:03 +0200</pubDate>
      
      <guid>http://www.lays.pro/post/bot-detection/</guid>
      <description>[DRAFT - WORK IN PROGRESS] Introduction The goal of this project was to create a POC for a bot detection system, by using a data file containing all HTTP requests to a server. I started by browsing and skimming through a few technical and scientific papers and resources to gather knowledge on how bot detection is done when applied to HTTP logs, those resources will be linked at the bottom of this article.</description>
    </item>
    
    <item>
      <title>Skills and random Achievements</title>
      <link>http://www.lays.pro/post/skills-achievements/</link>
      <pubDate>Tue, 14 Apr 2020 13:15:43 +0200</pubDate>
      
      <guid>http://www.lays.pro/post/skills-achievements/</guid>
      <description>To give you an overview of what I can accomplish, here are a few examples of projects and missions I completed over the course of my carreer.
Data science Computer vision   Participated in the kaggle deep fake detection challenge : classifying genuine and fake videos (generated by a GAN) from a 500GB dataset. I processed the videos to reduce the dataset size, by first extracting a few frames per video, than performing image segmentation to extract the faces contained in the frames, which happened to contain glitches generated by the GAN.</description>
    </item>
    
    <item>
      <title>Resnet50 classification REST API</title>
      <link>http://www.lays.pro/post/classification-api/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>http://www.lays.pro/post/classification-api/</guid>
      <description>Introduction I built a simple inference API backed by the famous pretrained CNN model ResNet50. The network is 50 layers deep and can classify images into 1000 object categories, such as keyboard, mouse, pencil, and many animals. Currently, the API is running on the same machine hosting this website : a simple t2.micro on AWS EC2. It is available at http://datascience.lays.pro.
UI   Architecture   Command line usage Download an image, and submit it with :</description>
    </item>
    
  </channel>
</rss>